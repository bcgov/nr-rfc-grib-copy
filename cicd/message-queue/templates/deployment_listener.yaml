kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    app.openshift.io/vcs-uri: 'https://github.com/bcgov/nr-rfc-grib-copy'
  name:  {{ .Values.app.name}}-{{ .Values.app.zone }}-{{ .Values.app.component }}
  labels:
    app: {{ .Values.app.name }}-{{ .Values.app.zone }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-{{ .Values.app.zone }}
      #env: {{ .Values.env }}
      #deployment: {{ .Values.app_name }}-deploy
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-{{ .Values.app.zone }}
        deployment: {{ .Values.app.name}}-{{ .Values.app.zone }}-{{ .Values.app.component }}
    spec:
      # imagePullSecrets:
      #   - name: deployer-token-klpcz
      volumes:
        - name: {{ .Values.app.name }}-{{ .Values.app.name }}-{{ .Values.app.component }}
          persistentVolumeClaim:
            claimName: {{ .Values.app.name }}-{{ .Values.app.name }}-{{ .Values.app.component }}
      containers:
        - name: {{ .Values.app.name }}
          image: >-
            {{ .Values.app.name}}-{{ .Values.app.zone }}-{{ .Values.app.component }}:{{ .Values.image.image_tag }}
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: DB_FILE_PATH
              value: "sqlite:////data/event_database.db"
            - name: AMPQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-{{ .Values.app.name }}-{{ .Values.app.component }}
                  key: ampq_username
            - name: AMPQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:  {{ .Values.app.name }}-{{ .Values.app.name }}-{{ .Values.app.component }}
                  key: ampq_password
            - name: AMPQ_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-{{ .Values.app.name }}-{{ .Values.app.component }}
                  key: domain
          volumeMounts:
            - name: {{ .Values.app.name }}-{{ .Values.app.name }}-{{ .Values.app.component }}
              mountPath: {{ .Values.app.pvc_mount_point }}

      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets: []
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  paused: false
